// ============================================================
//  app.js ‚Äî —Ñ–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (—ç–∫—Ä–∞–Ω 1)
//  ‚Ä¢ ¬´–î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–µ–π¬ª –±–µ–∑ –∫–Ω–æ–ø–∫–∏ (–≤—ã–±–æ—Ä = –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ)
//  ‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: —Ç–µ–ª–µ—Ñ–æ–Ω / e-mail
//  ‚Ä¢ –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ: —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
// ============================================================

const tg = window.Telegram?.WebApp;
tg?.expand?.();

// === –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã ===
const elFrom   = document.getElementById('from');
const elTo     = document.getElementById('to');
const elGuests = document.getElementById('guests');
const elPhone  = document.getElementById('phone');
const elEmail  = document.getElementById('email');

// === –≠–ª–µ–º–µ–Ω—Ç—ã –±–ª–æ–∫–∞ "–î–µ—Ç–∏" ===
const btnChildrenToggle = document.getElementById('children_toggle');
const panelChildren     = document.getElementById('children_panel');
const listChildren      = document.getElementById('children_list');
const selAge            = document.getElementById('child_age_select');

// === –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π ===
const btnPickOnMap = document.getElementById('pick_on_map');
const btnConfirm   = document.getElementById('confirm');

// === –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–µ—Ç–µ–π ===
let childrenAges = [];

// ------------------------------------------------------------
// üóì –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç (to >= from)
// ------------------------------------------------------------
function datesValid() {
  const f = elFrom.value, t = elTo.value;
  if (!f || !t) return false;
  try { return new Date(t).getTime() >= new Date(f).getTime(); }
  catch { return false; }
}
function updateButtonsState() {
  btnPickOnMap.disabled = !datesValid();
}
['change','input'].forEach(ev => {
  elFrom.addEventListener(ev, updateButtonsState);
  elTo.addEventListener(ev, updateButtonsState);
});
updateButtonsState();

// ------------------------------------------------------------
// üë∂ –ê–∫–∫–æ—Ä–¥–µ–æ–Ω "+ –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–µ–π"
// ------------------------------------------------------------
btnChildrenToggle.addEventListener('click', () => {
  const hidden = panelChildren.hasAttribute('hidden');
  if (hidden) {
    panelChildren.removeAttribute('hidden');
    btnChildrenToggle.classList.add('open');
  } else {
    panelChildren.setAttribute('hidden','');
    btnChildrenToggle.classList.remove('open');
  }
});

// ------------------------------------------------------------
// üßÆ –î–µ—Ç–∏ ‚Äî —É—Ç–∏–ª–∏—Ç—ã —Ä–µ–Ω–¥–µ—Ä–∞
// ------------------------------------------------------------
function ageLabel(n) {
  if (n === 0) return '–¥–æ 1 –≥–æ–¥–∞';
  const tail = n % 10, last2 = n % 100;
  let word = '–ª–µ—Ç';
  if (tail === 1 && last2 !== 11) word = '–≥–æ–¥';
  else if ([2,3,4].includes(tail) && ![12,13,14].includes(last2)) word = '–≥–æ–¥–∞';
  return `${n} ${word}`;
}
function renderChildren() {
  listChildren.innerHTML = '';
  childrenAges.forEach((age, idx) => {
    const row = document.createElement('div');
    row.className = 'child-item';

    const label = document.createElement('div');
    label.className = 'child-label';
    label.textContent = `–†–µ–±—ë–Ω–æ–∫ ${ageLabel(age)}`;

    const btn = document.createElement('button');
    btn.className = 'child-remove';
    btn.type = 'button';
    btn.textContent = '√ó';
    btn.addEventListener('click', () => {
      childrenAges.splice(idx, 1);
      renderChildren();
    });

    row.appendChild(label);
    row.appendChild(btn);
    listChildren.appendChild(row);
  });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–±—ë–Ω–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
function addChildBySelect() {
  const v = selAge.value;
  if (!v || v === '') return;
  const n = Number(v);
  if (Number.isNaN(n) || n < 0 || n > 13) return;
  childrenAges.push(n);
  renderChildren();
  selAge.value = ''; // —Å–±—Ä–æ—Å —Å–µ–ª–µ–∫—Ç–∞ –Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
}
selAge.addEventListener('change', addChildBySelect);

// ------------------------------------------------------------
// üìûüìß –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
// ------------------------------------------------------------

// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º + –∏ —Ü–∏—Ñ—Ä—ã
function normalizePhone(raw) {
  return (raw || '')
    .replace(/[^\d+]/g, '')        // –≤—Å—ë, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ –ø–ª—é—Å–∞
    .replace(/(?!^)\+/g, '');      // –ª–∏—à–Ω–∏–µ –ø–ª—é—Å—ã –≤–Ω—É—Ç—Ä–∏ —É–±–∏—Ä–∞–µ–º
}

// –†–∞–∑—Ä–µ—à–∏–º —Ñ–æ—Ä–º–∞—Ç—ã –†–§: +7XXXXXXXXXX / 8XXXXXXXXXX / 7XXXXXXXXXX
// –£—Å–ª–æ–≤–∏–µ: –Ω–µ –º–µ–Ω—å—à–µ 10 –∑–Ω–∞—á–∏–º—ã—Ö —Ü–∏—Ñ—Ä, –ª—É—á—à–µ 11 —Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã/8
function isValidPhone(raw) {
  const p = normalizePhone(raw);
  const digits = p.replace(/\D/g, '');
  if (digits.length < 10) return false;

  // –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –Ω–∞—á–∞–ª–∞: +7 / 7 / 8
  if (/^\+?7\d{10}$/.test(p) || /^8\d{10}$/.test(p) || /^7\d{10}$/.test(p)) {
    return true;
  }
  // fallback: –ø—Ä–æ—Å—Ç–æ >=10 —Ü–∏—Ñ—Ä ‚Äî —Å—á–∏—Ç–∞–µ–º –æ–∫ (–¥–ª—è –≥–æ—Å—Ç–µ–π/–∏–Ω—ã—Ö —Å—Ç—Ä–∞–Ω)
  return digits.length >= 10;
}

// –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ email (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç—Ä–æ–≥–∞—è –¥–ª—è MiniApp)
function isValidEmail(raw) {
  if (!raw) return false;
  const s = String(raw).trim();
  // RFC-—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è —É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  const re = /^[^\s@]+@[^\s@]+\.[^\s@]{2,}$/i;
  return re.test(s);
}

// –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–ª—è –∏ –ø–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
function markInvalid(el, msg) {
  el.classList.add('invalid');
  alert(msg);
  el.focus();
}

// –°–Ω—è—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É –æ—à–∏–±–æ–∫
function clearInvalid() {
  [elPhone, elEmail].forEach(el => el.classList.remove('invalid'));
}

// ------------------------------------------------------------
// üó∫ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É (–∫–∞–∫ –±—ã–ª–æ)
// ------------------------------------------------------------
btnPickOnMap.addEventListener('click', () => {
  if (!datesValid()) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞ –∏ –≤—ã–µ–∑–¥–∞');
    return;
  }
  const params = new URLSearchParams({
    from: elFrom.value,
    to: elTo.value,
    guests: elGuests.value || '1',
    // –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–µ–π:
    // children_count: String(childrenAges.length),
    // children_ages: childrenAges.join(',')
  });
  location.href = `./map/?${params.toString()}`;
});

// ------------------------------------------------------------
// ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤)
// ------------------------------------------------------------
btnConfirm.addEventListener('click', () => {
  if (!datesValid()) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞ –∏ –≤—ã–µ–∑–¥–∞');
    return;
  }
  clearInvalid();

  const phoneRaw = elPhone.value.trim();
  const emailRaw = elEmail.value.trim();

  // –ü—Ä–∞–≤–∏–ª–æ: —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–æ–Ω—Ç–∞–∫—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
  if (!phoneRaw && !emailRaw) {
    markInvalid(elPhone, '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ e-mail –¥–ª—è —Å–≤—è–∑–∏.');
    return;
  }
  // –ï—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞–ø–æ–ª–Ω–µ–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º
  if (phoneRaw && !isValidPhone(phoneRaw)) {
    markInvalid(elPhone, '–ü–æ—Ö–æ–∂–µ, —Ç–µ–ª–µ—Ñ–æ–Ω —É–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü—Ä–∏–º–µ—Ä: +7 999 123-45-67');
    return;
  }
  // –ï—Å–ª–∏ e-mail –∑–∞–ø–æ–ª–Ω–µ–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º
  if (emailRaw && !isValidEmail(emailRaw)) {
    markInvalid(elEmail, '–ü–æ—Ö–æ–∂–µ, –∞–¥—Ä–µ—Å e-mail —É–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü—Ä–∏–º–µ—Ä: example@mail.ru');
    return;
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∫–æ–±–æ–∫)
  const phoneNormalized = phoneRaw ? normalizePhone(phoneRaw) : '';

  const data = {
    from: elFrom.value || '',
    to: elTo.value || '',
    guests: elGuests.value || '',
    children_count: childrenAges.length,
    children_ages: childrenAges.slice(),
    phone: phoneNormalized,
    email: emailRaw || ''
  };

  tg?.sendData?.(JSON.stringify(data));
  alert('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
  // tg?.close?.();
});

// ------------------------------------------------------------
// üé® –ù–µ–±–æ–ª—å—à–∞—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—è –ø—Ä–∏ –æ—à–∏–±–∫–µ (–¥–æ–±–∞–≤—å –≤ CSS –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏)
// .invalid { border-color: #ef4444 !important; box-shadow: 0 0 0 3px rgba(239,68,68,.12); }
// ------------------------------------------------------------
